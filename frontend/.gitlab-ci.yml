stages:
  - build
  - notify
build-frontend-code-job:
  stage: build  
  only:
    changes:
    - frontend/**/*
  script:        
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

sonarqube-frontend-sast:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.host.url=${SONARQUBE_URL} -Dsonar.projectKey=${SONAR_PROJECT_KEY_FRONT} -Dsonar.login=${SONAR_LOGIN} -Dsonar.sources -Dsonar.sources=frontend/src
  allow_failure: true
  needs:
    - build-frontend-code-job

telegram-notification-frontend:
  stage: notify
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /send notification/
      changes: 
        - frontend/**/*
  script:
    - >
      curl -X POST -H "Content-type: application/json" --data '{"chat_id":"-1002558070233", "text":"'"${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_SHA}/download?job=${CI_JOB_NAME}"'"}' https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage
  needs:
    - build-frontend-code-job 
